name: BPBleOTA
options:
  #carthage: true
  deploymentTarget:
    iOS: "11.0"
  bundleIdPrefix: com.bbb.zhxf
  version: 0.6.0

packages:
  iOSMcuManagerLibrary:
    url: https://github.com/NordicSemiconductor/IOS-nRF-Connect-Device-Manager
    from: 1.3.1
  SwiftCBOR:
    url: https://github.com/unrelentingtech/SwiftCBOR
    from: 0.4.4
  NordicDFU:
    url: https://github.com/NordicSemiconductor/IOS-DFU-Library
    from: 4.13.0
  ZIPFoundation:
    url: https://github.com/weichsel/ZIPFoundation
    from: 0.9.11
    
targetTemplates:
  Framework:
    platform: iOS
    type: framework
    sources:
      - .build/checkouts/${frameworSourceFolder}
    swift_versions: ["5.0", "5.1", "5.2", "5.3", "5.4", "5.5", "5.6", "5.7"]
    settings:
      GENERATE_INFOPLIST_FILE: YES
      CODE_SIGNING_ALLOWED: NO
      MARKETING_VERSION: ${PACKAGE_VERSION}
      CURRENT_PROJECT_VERSION: ${PACKAGE_VERSION}
targets:
  iOSMcuManagerLibrary:
    templates:
      - Framework
    templateAttributes:
      frameworSourceFolder: IOS-nRF-Connect-Device-Manager/Source
      PACKAGE_VERSION: 1.3.1
    dependencies:
      - package: SwiftCBOR
      
  SwiftCBOR:
    templates:
      - Framework
    templateAttributes:
      frameworSourceFolder: SwiftCBOR/Sources
      PACKAGE_VERSION: 0.4.4
      
  NordicDFU:
    templates:
      - Framework
    templateAttributes:
      frameworSourceFolder: IOS-DFU-Library/iOSDFULibrary
      PACKAGE_VERSION: 4.13.0
    dependencies:
      - package: ZIPFoundation
      
  ZIPFoundation:
    templates:
      - Framework
    templateAttributes:
      frameworSourceFolder: ZIPFoundation/Sources
      PACKAGE_VERSION: 0.9.11
    
     
      
  BPBleOTA:
    type: framework
    platform: iOS
    sources: Sources
    dependencies:
        - package: iOSMcuManagerLibrary
        - package: NordicDFU
    swift_versions: ["5.0", "5.1", "5.2", "5.3", "5.4", "5.5", "5.6", "5.7"]
    settings:
        HEADER_SEARCH_PATHS: $(SRCROOT)/Sources
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: "$(inherited) SWIFT_PACKAGE"
        GENERATE_INFOPLIST_FILE: YES
        CODE_SIGNING_ALLOWED: NO
        MARKETING_VERSION: 0.6.0
        CURRENT_PROJECT_VERSION: 0.6.20230506
  BPBleOTATests:
    type: bundle.unit-test
    platform: iOS
    sources: Tests
    dependencies:
      - target: BPBleOTA
    settings:
      HEADER_SEARCH_PATHS: $(SRCROOT)/Sources
      GENERATE_INFOPLIST_FILE: YES
      CODE_SIGNING_ALLOWED: NO
aggregateTargets:
  BuildAllFrameworks :
    settings:
        HEADER_SEARCH_PATHS: $(SRCROOT)/Sources
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: "$(inherited) SWIFT_PACKAGE"
    buildScripts:
      - name: Run Script
        script: |
          BUILD_DIR="Build"
          PRODUCT_DIR="Products"
          function build_framework() {
            local framework_name="$1"
            local scheme="${framework_name}"
            local tmp_dir="${BUILD_DIR}/${framework_name}"
            local ios_archive_path="${tmp_dir}/iOS.xcarchive"
            local ios_sim_archive_path="${tmp_dir}/iOSSimulator.xcarchive"
          
            # Clean up any previous build artifacts
            rm -rf "${tmp_dir}"
            #rm -rf "${PRODUCT_DIR}/${framework_name}.xcframework"
          
            # Build archives for iOS and iOS Simulator
            xcodebuild archive \
              -scheme "${scheme}" \
              -archivePath "${ios_sim_archive_path}" \
              -destination "generic/platform=iOS Simulator" \
              -sdk iphonesimulator \
              SKIP_INSTALL=NO \
              BUILD_LIBRARY_FOR_DISTRIBUTION=YES || { echo "Error: Failed to build archive for ${framework_name} (iOS Simulator)"; exit 1; }
          
            xcodebuild archive \
              -scheme "${scheme}" \
              -archivePath "${ios_archive_path}" \
              -destination "generic/platform=iOS" \
              -sdk iphoneos \
              SKIP_INSTALL=NO \
              BUILD_LIBRARY_FOR_DISTRIBUTION=YES || { echo "Error: Failed to build archive for ${framework_name} (iOS)"; exit 1; }

            xcodebuild -create-xcframework \
              -framework ${ios_sim_archive_path}/Products/Library/Frameworks/${framework_name}.framework \
              -framework ${ios_archive_path}/Products/Library/Frameworks/${framework_name}.framework \
              -output ${PRODUCT_DIR}/${framework_name}.xcframework \
              #| xcpretty

           
            echo "build_framework ${framework_name} Successed!"
          }
          
          build_framework "BPBleOTA"
          build_framework "SwiftCBOR"
          build_framework "iOSMcuManagerLibrary"
          build_framework "NordicDFU"
          build_framework "ZIPFoundation"

          ## Create XCFramework from archives
          # rm -rf "${PRODUCT_DIR}/BPBleOTA.xcframework"
          #xcodebuild -create-xcframework \
          #    -framework "${BUILD_DIR}/BPBleOTA/iOS.xcarchive/Products/Library/Frameworks/BPBleOTA.framework" \
          #    -framework "${BUILD_DIR}/BPBleOTA/iOSSimulator.xcarchive/Products/Library/Frameworks/BPBleOTA.framework" \
          #    -framework "${BUILD_DIR}/iOSMcuManagerLibrary/iOS.xcarchive/Products/Library/Frameworks/iOSMcuManagerLibrary.framework" \
          #    -framework "${BUILD_DIR}/iOSMcuManagerLibrary/iOSSimulator.xcarchive/Products/Library/Frameworks/iOSMcuManagerLibrary.framework" \
          #    -framework "${BUILD_DIR}/SwiftCBOR/iOS.xcarchive/Products/Library/Frameworks/SwiftCBOR.framework" \
          #    -framework "${BUILD_DIR}/SwiftCBOR/iOSSimulator.xcarchive/Products/Library/Frameworks/SwiftCBOR.framework" \
          #    -framework "${BUILD_DIR}/NordicDFU/iOS.xcarchive/Products/Library/Frameworks/NordicDFU.framework" \
          #    -framework "${BUILD_DIR}/NordicDFU/iOSSimulator.xcarchive/Products/Library/Frameworks/NordicDFU.framework" \
          #    -framework "${BUILD_DIR}/ZIPFoundation/iOS.xcarchive/Products/Library/Frameworks/ZIPFoundation.framework" \
          #    -framework "${BUILD_DIR}/ZIPFoundation/iOSSimulator.xcarchive/Products/Library/Frameworks/ZIPFoundation.framework" \
          #    -output "${PRODUCT_DIR}/BPBleOTA.xcframework"
              
