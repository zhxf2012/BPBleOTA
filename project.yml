name: BPBleOTA
options:
  #carthage: true
  deploymentTarget:
    iOS: "11.0"
  bundleIdPrefix: com.bbb.zhxf

packages:
  iOSMcuManagerLibrary:
    url: https://github.com/NordicSemiconductor/IOS-nRF-Connect-Device-Manager
    from: 1.3.1
  SwiftCBOR:
    url: https://github.com/unrelentingtech/SwiftCBOR
    from: 0.4.4
  NordicDFU:
    url: https://github.com/NordicSemiconductor/IOS-DFU-Library
    from: 4.13.0
  ZIPFoundation:
    url: https://github.com/weichsel/ZIPFoundation
    from: 0.9.11
targets:
  BPBleOTA:
    type: framework
    platform: iOS
    sources: Sources
    dependencies:
        - package: iOSMcuManagerLibrary
        - package: SwiftCBOR
        - package: NordicDFU
        - package: ZIPFoundation
    swift_versions: ["5.0", "5.1", "5.2", "5.3", "5.4"]
    settings:
        HEADER_SEARCH_PATHS: $(SRCROOT)/Sources
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: "$(inherited) SWIFT_PACKAGE"
        GENERATE_INFOPLIST_FILE: YES
        CODE_SIGNING_ALLOWED: NO
  BPBleOTATests:
    type: bundle.unit-test
    platform: iOS
    sources: Tests
    dependencies:
      - target: BPBleOTA
    settings:
      HEADER_SEARCH_PATHS: $(SRCROOT)/Sources
      GENERATE_INFOPLIST_FILE: YES
      CODE_SIGNING_ALLOWED: NO
aggregateTargets:
  BPBleOTABuilder :
    settings:
        HEADER_SEARCH_PATHS: $(SRCROOT)/Sources
        SWIFT_ACTIVE_COMPILATION_CONDITIONS: "$(inherited) SWIFT_PACKAGE"
    buildScripts:
      - name: Run Script
        script: |
          #echo("Hello")
          FRAMEWORK_NAME=BPBleOTA
          SCHEME="${FRAMEWORK_NAME}"
          BUILD_DIR="Build"
          PRODUCT_DIR="Products"
          TMP_DIR="${BUILD_DIR}/Tmp"
          IOS_ARCHIVE_PATH="${TMP_DIR}/iOS.xcarchive"
          IOS_SIM_ARCHIVE_PATH="${TMP_DIR}/iOSSimulator.xcarchive"
          rm -rf ${BUILD_DIR}
          rm -rf "${PRODUCT_DIR}"
          xcodebuild archive \
           -scheme ${SCHEME} \
           -archivePath ${IOS_SIM_ARCHIVE_PATH} \
           -destination "generic/platform=iOS Simulator" \
           -sdk iphonesimulator \
           SKIP_INSTALL=NO \
           BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
           #EXCLUDED_ARCHS="arm64_x86_64-maccatalyst" \
           #| xcpretty
          xcodebuild archive \
           -scheme ${SCHEME} \
           -archivePath ${IOS_ARCHIVE_PATH} \
           -destination "generic/platform=iOS" \
           -sdk iphoneos \
           SKIP_INSTALL=NO \
           BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
           #EXCLUDED_ARCHS="arm64_x86_64-maccatalyst" \
           #| xcpretty
          xcodebuild -create-xcframework \
           -framework ${IOS_SIM_ARCHIVE_PATH}/Products/Library/Frameworks/${FRAMEWORK_NAME}.framework \
           -framework ${IOS_ARCHIVE_PATH}/Products/Library/Frameworks/${FRAMEWORK_NAME}.framework \
           -output ${PRODUCT_DIR}/${FRAMEWORK_NAME}.xcframework \
           #| xcpretty
